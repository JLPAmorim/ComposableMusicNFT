import {
  genOverlays,
  makeVariantProps,
  useVariant
} from "./chunk-3WFSYMIM.js";
import {
  VImg
} from "./chunk-E5EUHXTA.js";
import {
  makeRoundedProps,
  useRounded
} from "./chunk-GNPRYO77.js";
import {
  makeDensityProps,
  useDensity
} from "./chunk-C6DBG73R.js";
import {
  VIcon
} from "./chunk-OWLY3STX.js";
import {
  makeSizeProps,
  useSize
} from "./chunk-4FFTLX3Z.js";
import {
  makeTagProps
} from "./chunk-MOQFM4CJ.js";
import {
  IconValue
} from "./chunk-63GZZJ3B.js";
import {
  defineComponent,
  propsFactory,
  useRender
} from "./chunk-RVNKJLVU.js";
import {
  createVNode
} from "./chunk-UKT6457V.js";

// node_modules/vuetify/lib/components/VAvatar/VAvatar.mjs
import "C:/Users/Joao/Desktop/ComposableMusicNFT/composableMusic/node_modules/vuetify/lib/components/VAvatar/VAvatar.css";
var makeVAvatarProps = propsFactory({
  start: Boolean,
  end: Boolean,
  icon: IconValue,
  image: String,
  ...makeDensityProps(),
  ...makeRoundedProps(),
  ...makeSizeProps(),
  ...makeTagProps(),
  ...makeVariantProps({
    variant: "flat"
  })
}, "VAvatar");
var VAvatar = defineComponent({
  name: "VAvatar",
  props: makeVAvatarProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      colorClasses,
      colorStyles,
      variantClasses
    } = useVariant(props);
    const {
      densityClasses
    } = useDensity(props);
    const {
      roundedClasses
    } = useRounded(props);
    const {
      sizeClasses,
      sizeStyles
    } = useSize(props);
    useRender(() => {
      var _slots$default;
      return createVNode(props.tag, {
        "class": ["v-avatar", {
          "v-avatar--start": props.start,
          "v-avatar--end": props.end
        }, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],
        "style": [colorStyles.value, sizeStyles.value]
      }, {
        default: () => [props.image ? createVNode(VImg, {
          "key": "image",
          "src": props.image,
          "alt": ""
        }, null) : props.icon ? createVNode(VIcon, {
          "key": "icon",
          "icon": props.icon
        }, null) : (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), genOverlays(false, "v-avatar")]
      });
    });
    return {};
  }
});

export {
  VAvatar
};
//# sourceMappingURL=chunk-46FZBP4H.js.map
